{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebStormProjects\\\\ReatNativeCourse2020\\\\rn-starter\\\\src\\\\screens\\\\ChangeColorScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RgbButton from \"./RgbButton\";\n\nvar ChangeColorScreen = function ChangeColorScreen() {\n  var _useState = useState({\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      rgb = _useState2[0],\n      setRGB = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"1\",\n    id: \"1\",\n    select: true\n  }, {\n    title: \"10\",\n    id: \"2\",\n    select: false\n  }, {\n    title: \"20\",\n    id: \"3\",\n    select: false\n  }, {\n    title: \"30\",\n    id: \"4\",\n    select: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickers = _useState4[0],\n      setPicker = _useState4[1];\n\n  var getStep = function getStep() {\n    return pickers.find(function (item) {\n      return item.select;\n    }).title;\n  };\n\n  var setCurrentStep = function setCurrentStep(value) {\n    return setPicker(function (prev) {\n      return _toConsumableArray(prev.map(function (item) {\n        return item.title === value ? item.select = true : item.select = false;\n      }));\n    });\n  };\n\n  var colors = [\"red\", \"green\", \"blue\"];\n\n  var setState = function setState(color, isPlus) {\n    if (isPlus && rgb[color] === 255) {\n      return;\n    }\n\n    if (!isPlus && rgb[color] === 0) {\n      return;\n    }\n\n    setRGB(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, color, isPlus ? prev[color] + +getStep() : prev[color] - +getStep()));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(RgbButton, {\n        color: item,\n        setState: setState,\n        value: rgb[item],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      margin: 10,\n      height: 100,\n      weight: 150,\n      backgroundColor: \"rgb(\" + Object.values(rgb) + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.chooseStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Choose step to inc/dec: \")), React.createElement(View, {\n    style: {\n      flex: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker, {\n    selectedValue: getStep(),\n    style: {\n      height: 20,\n      width: 100\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setCurrentStep(itemValue);\n    },\n    mode: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, pickers.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item.title,\n      value: item.title,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 35\n      }\n    });\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"space-around\"\n  },\n  chooseStep: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  text: {\n    fontWeight: \"bold\",\n    fontSize: 15\n  }\n});\nexport { ChangeColorScreen as default };","map":{"version":3,"sources":["D:/WebStormProjects/ReatNativeCourse2020/rn-starter/src/screens/ChangeColorScreen.js"],"names":["React","useState","RgbButton","ChangeColorScreen","red","green","blue","rgb","setRGB","title","id","select","pickers","setPicker","getStep","find","item","setCurrentStep","value","prev","map","colors","setState","color","isPlus","styles","container","margin","height","weight","backgroundColor","Object","values","chooseStep","flex","text","width","itemValue","itemIndex","StyleSheet","create","flexDirection","justifyContent","alignItems","marginBottom","fontWeight","fontSize","default"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {StyleSheet, View, FlatList, Picker, Text} from \"react-native\";\r\nimport RgbButton from \"./RgbButton\";\r\n\r\nconst ChangeColorScreen = () => {\r\n  const [rgb, setRGB] = useState({\r\n    red: 0,\r\n    green: 0,\r\n    blue: 0\r\n  });\r\n\r\n  const [pickers,  setPicker] = useState([\r\n    {title: \"1\", id: \"1\", select: true,  },\r\n    {title: \"10\", id: \"2\", select: false},\r\n    {title: \"20\", id: \"3\", select: false},\r\n    {title: \"30\", id: \"4\", select: false}\r\n  ]);\r\n\r\n  const getStep = () => pickers.find(item => item.select).title;\r\n\r\n  const setCurrentStep = value => setPicker(prev => [\r\n    ...prev.map(item => item.title === value ? item.select =true : item.select = false)\r\n  ])\r\n\r\n  const colors = [\"red\", \"green\", \"blue\"];\r\n\r\n  const setState = (color, isPlus) => {\r\n    if (isPlus && rgb[color] === 255) {\r\n      return;\r\n    }\r\n\r\n    if (!isPlus && rgb[color] === 0) {\r\n      return;\r\n    }\r\n\r\n    setRGB(prev => ({\r\n      ...prev, [color]: isPlus ? prev[color] + +getStep() : prev[color] - +getStep()\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={colors}\r\n        renderItem={({item}) => (<RgbButton color={item} setState={setState} value={rgb[item]}/>)}\r\n        keyExtractor={( item) =>  item}\r\n      />\r\n\r\n      <View style={{margin: 10, height: 100, weight: 150, backgroundColor: `rgb(${Object.values(rgb)})`}}/>\r\n\r\n      <View style={styles.chooseStep}>\r\n        <View style={{flex: 0.5}}>\r\n          <Text style={styles.text}>\r\n            {\"Choose step to inc/dec: \"}\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={{flex: 0.5}}>\r\n          <Picker\r\n            selectedValue={getStep()}\r\n            style={{ height: 20, width: 100 }}\r\n            onValueChange={(itemValue, itemIndex) => setCurrentStep(itemValue)}\r\n            mode={\"dropdown\"}\r\n          >\r\n            {pickers.map(item => (<Picker.Item label={item.title} value={item.title} key={item.id} />))}\r\n          </Picker>\r\n        </View>\r\n      </View>\r\n\r\n\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    // alignItems: \"center\"\r\n  },\r\n\r\n  chooseStep: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 15,\r\n  }\r\n\r\n\r\n});\r\n\r\nexport {ChangeColorScreen as default};\r\n"]},"metadata":{},"sourceType":"module"}