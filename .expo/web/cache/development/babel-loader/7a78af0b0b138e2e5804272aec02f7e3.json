{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebStormProjects\\\\ReatNativeCourse2020\\\\rn-starter\\\\src\\\\screens\\\\ChangeColorScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport RgbButton from \"./RgbButton\";\n\nvar ChangeColorScreen = function ChangeColorScreen() {\n  var _useState = useState({\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      rgb = _useState2[0],\n      setRGB = _useState2[1];\n\n  var colors = [\"red\", \"green\", \"blue\"];\n\n  var setState = function setState(color, isPlus) {\n    if (isPlus && rgb[color] === 255) {\n      return;\n    }\n\n    if (!isPlus && rgb[color] === 0) {\n      return;\n    }\n\n    setRGB(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, color, isPlus ? ++prev[color] : --prev[color]));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(RgbButton, {\n        color: item,\n        setState: setState,\n        value: rgb[item],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      margin: 10,\n      height: 100,\n      weight: 100,\n      backgroundColor: \"rgb(\" + Object.values(rgb) + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Java\",\n    value: \"java\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"JavaScript\",\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport { ChangeColorScreen as default };","map":{"version":3,"sources":["D:/WebStormProjects/ReatNativeCourse2020/rn-starter/src/screens/ChangeColorScreen.js"],"names":["React","useState","RgbButton","ChangeColorScreen","red","green","blue","rgb","setRGB","colors","setState","color","isPlus","prev","styles","container","item","margin","height","weight","backgroundColor","Object","values","selectedValue","width","itemValue","itemIndex","setSelectedValue","StyleSheet","create","flex","default"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {StyleSheet, View, FlatList, Picker} from \"react-native\";\r\nimport RgbButton from \"./RgbButton\";\r\n\r\nconst ChangeColorScreen = () => {\r\n  const [rgb, setRGB] = useState({\r\n    red: 0,\r\n    green: 0,\r\n    blue: 0\r\n  });\r\n\r\n  const colors = [\"red\", \"green\", \"blue\"];\r\n\r\n  const setState = (color, isPlus) => {\r\n    if (isPlus && rgb[color] === 255) {\r\n      return;\r\n    }\r\n\r\n    if (!isPlus && rgb[color] === 0) {\r\n      return;\r\n    }\r\n\r\n    setRGB(prev => ({\r\n      ...prev, [color]: isPlus ? ++prev[color] : --prev[color]\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={colors}\r\n        renderItem={({item}) => (<RgbButton color={item} setState={setState} value={rgb[item]}/>)}\r\n        keyExtractor={( item) =>  item}\r\n      />\r\n\r\n      <View style={{margin: 10, height: 100, weight: 100, backgroundColor: `rgb(${Object.values(rgb)})`}}/>\r\n\r\n      <Picker\r\n        selectedValue={selectedValue}\r\n        style={{ height: 50, width: 150 }}\r\n        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\r\n      >\r\n        <Picker.Item label=\"Java\" value=\"java\" />\r\n        <Picker.Item label=\"JavaScript\" value=\"js\" />\r\n      </Picker>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n\r\n\r\n});\r\n\r\nexport {ChangeColorScreen as default};\r\n"]},"metadata":{},"sourceType":"module"}