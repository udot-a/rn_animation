{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebStormProjects\\\\ReatNativeCourse2020\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar randomRGB = function randomRGB() {\n  return [1, 2, 3].map(function (i) {\n    return Math.floor(Math.random() * 256);\n  }) + \"\";\n};\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColor = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add color\",\n    onPress: function onPress() {\n      return setColor(function (prev) {\n        return [randomRGB()].concat(_toConsumableArray(prev));\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          margin: 10,\n          height: 100,\n          weight: 100,\n          backgroundColor: \"rgb(\" + item + \")\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 34\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_, index) {\n      return index + \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport { ColorScreen as default };","map":{"version":3,"sources":["D:/WebStormProjects/ReatNativeCourse2020/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","randomRGB","map","i","Math","floor","random","ColorScreen","colors","setColor","styles","container","prev","item","margin","height","weight","backgroundColor","_","index","StyleSheet","create","flex","default"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAc,UAAAC,CAAC;AAAA,WAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAJ;AAAA,GAAf,IAAsD,EAA5D;AAAA,CAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACGP,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACjBQ,MADiB;AAAA,MACTC,QADS;;AAExB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMF,QAAQ,CAAC,UAAAG,IAAI;AAAA,gBAAKX,SAAS,EAAd,4BAAqBW,IAArB;AAAA,OAAL,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,MADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAEK,IAAF,QAAEA,IAAF;AAAA,aAAa,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE,GAArB;AAA0BC,UAAAA,MAAM,EAAE,GAAlC;AAAuCC,UAAAA,eAAe,WAASJ,IAAT;AAAtD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AAAA,KAFd;AAGE,IAAA,YAAY,EAAE,sBAAEK,CAAF,EAAKC,KAAL;AAAA,aAAgBA,KAAK,GAAG,EAAxB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeD,CAjBD;;AAmBA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAQA,SAAQf,WAAW,IAAIgB,OAAvB","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Button, StyleSheet, View, FlatList, Text} from \"react-native\";\r\n\r\nconst randomRGB = () => [1, 2, 3].map(i => Math.floor(Math.random() * 256)) + \"\";\r\n\r\nconst ColorScreen = () => {\r\n  const [colors, setColor] = useState([])\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button\r\n        title={\"Add color\"}\r\n        onPress={() => setColor(prev => [randomRGB(), ...prev])}\r\n      />\r\n\r\n      <FlatList\r\n        data={colors}\r\n        renderItem={({item}) => (<View style={{margin: 10, height: 100, weight: 100, backgroundColor: `rgb(${item})`}}/>)}\r\n        keyExtractor={( _, index) =>  index + \"\"}\r\n      />\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n\r\n\r\n});\r\n\r\nexport {ColorScreen as default};\r\n"]},"metadata":{},"sourceType":"module"}