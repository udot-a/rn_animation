{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebStormProjects\\\\ReatNativeCourse2020\\\\rn-starter\\\\src\\\\screens\\\\Card.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { height, width } from \"./screenSize\";\nvar UIManager = NativeModules.UIManager;\nUIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n\nfunction useOutsideAlerter(ref, setState) {\n  useEffect(function () {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setState();\n      }\n    }\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nvar Card = function Card(_ref) {\n  var img = _ref.img,\n      text = _ref.text;\n\n  var _useState = useState({\n    scale: 1,\n    offset: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      anime = _useState2[0],\n      setAnime = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.containerImg, {\n      transform: [{\n        translateX: anime.offset\n      }, {\n        scale: anime.scale\n      }]\n    }],\n    onPress: function onPress() {\n      LayoutAnimation.spring();\n      setAnime(function (prev) {\n        return {\n          scale: prev.scale === 1 ? 1.3 : 1,\n          offset: prev.offset === 0 ? 100 : 0\n        };\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.img,\n    source: img,\n    onMouseEnter: function onMouseEnter() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    styles: {\n      fontSize: 35,\n      fontStyle: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"tomato\",\n    padding: 10,\n    height: 0.2 * height,\n    margin: 10\n  },\n  containerImg: {\n    width: 0.4 * width,\n    height: 0.18 * height,\n    borderRadius: 10,\n    borderColor: \"lightblue\",\n    borderWidth: 1\n  },\n  img: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'contain',\n    margin: 5\n  }\n});\nexport { Card as default };","map":{"version":3,"sources":["D:/WebStormProjects/ReatNativeCourse2020/rn-starter/src/screens/Card.js"],"names":["React","useState","useEffect","useRef","height","width","UIManager","NativeModules","setLayoutAnimationEnabledExperimental","useOutsideAlerter","ref","setState","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Card","img","text","scale","offset","anime","setAnime","styles","container","containerImg","transform","translateX","LayoutAnimation","spring","prev","fontSize","fontStyle","StyleSheet","create","flexDirection","justifyContent","alignItems","borderWidth","borderRadius","borderColor","padding","margin","flex","resizeMode","default"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;;;;;;AAGA,SAAQC,MAAR,EAAgBC,KAAhB;IAEQC,S,GAAcC,a,CAAdD,S;AAERA,SAAS,CAACE,qCAAV,IACAF,SAAS,CAACE,qCAAV,CAAgD,IAAhD,CADA;;AAGA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,QAAhC,EAA0C;AACxCT,EAAAA,SAAS,CAAC,YAAM;AAId,aAASU,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIH,GAAG,CAACI,OAAJ,IAAe,CAACJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDL,QAAAA,QAAQ;AACT;AACF;;AAGDM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC;AACA,WAAO,YAAM;AAEXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC;AACD,KAHD;AAID,GAhBQ,EAgBN,CAACF,GAAD,CAhBM,CAAT;AAiBD;;AAGD,IAAMU,IAAI,GAAG,SAAPA,IAAO,OAAiB;AAAA,MAAfC,GAAe,QAAfA,GAAe;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAAA,kBACFrB,QAAQ,CAAC;AAACsB,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GAAD,CADN;AAAA;AAAA,MACrBC,KADqB;AAAA,MACdC,QADc;;AAG5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CACLD,MAAM,CAACE,YADF,EAEL;AAACC,MAAAA,SAAS,EAAE,CAAC;AAACC,QAAAA,UAAU,EAAEN,KAAK,CAACD;AAAnB,OAAD,EAA6B;AAACD,QAAAA,KAAK,EAAEE,KAAK,CAACF;AAAd,OAA7B;AAAZ,KAFK,CADT;AAKE,IAAA,OAAO,EAAE,mBAAM;AACbS,MAAAA,eAAe,CAACC,MAAhB;AACAP,MAAAA,QAAQ,CAAC,UAAAQ,IAAI;AAAA,eAAK;AAChBX,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,KAAc,CAAd,GAAkB,GAAlB,GAAwB,CADf;AAEhBC,UAAAA,MAAM,EAAEU,IAAI,CAACV,MAAL,KAAgB,CAAhB,GAAoB,GAApB,GAA0B;AAFlB,SAAL;AAAA,OAAL,CAAR;AAID,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEG,MAAM,CAACN,GADhB;AAEE,IAAA,MAAM,EAAEA,GAFV;AAGE,IAAA,YAAY,EAAE,wBAAM,CAAE,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAqBE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE;AAACc,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IADH,CArBF,CADF;AA2BD,CA9BD;;AAgCA,IAAMK,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,cAAc,EAAE,eAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMTC,IAAAA,WAAW,EAAE,QANJ;AAOTC,IAAAA,OAAO,EAAE,EAPA;AAQTzC,IAAAA,MAAM,EAAE,MAAMA,MARL;AAST0C,IAAAA,MAAM,EAAE;AATC,GADoB;AAa/BjB,EAAAA,YAAY,EAAE;AACZxB,IAAAA,KAAK,EAAE,MAAMA,KADD;AAEZD,IAAAA,MAAM,EAAE,OAAOA,MAFH;AAGZuC,IAAAA,YAAY,EAAE,EAHF;AAIZC,IAAAA,WAAW,EAAE,WAJD;AAKZF,IAAAA,WAAW,EAAE;AALD,GAbiB;AAqB/BrB,EAAAA,GAAG,EAAE;AACH0B,IAAAA,IAAI,EAAE,CADH;AAEH1C,IAAAA,KAAK,EAAE,IAFJ;AAGHD,IAAAA,MAAM,EAAE,IAHL;AAIH4C,IAAAA,UAAU,EAAE,SAJT;AAKHF,IAAAA,MAAM,EAAE;AALL;AArB0B,CAAlB,CAAf;AA8BA,SAAQ1B,IAAI,IAAI6B,OAAhB","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport { NativeModules,\r\n  LayoutAnimation,Text, StyleSheet, View, Image, TouchableOpacity, AppState } from \"react-native\";\r\nimport {height, width} from \"./screenSize\";\r\n\r\nconst { UIManager } = NativeModules;\r\n\r\nUIManager.setLayoutAnimationEnabledExperimental &&\r\nUIManager.setLayoutAnimationEnabledExperimental(true);\r\n\r\nfunction useOutsideAlerter(ref, setState) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setState();\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n}\r\n\r\n\r\nconst Card = ({img, text}) => {\r\n  const [anime, setAnime] = useState({scale: 1, offset: 0});\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.containerImg,\r\n          {transform: [{translateX: anime.offset}, {scale: anime.scale}]},\r\n        ]}\r\n        onPress={() => {\r\n          LayoutAnimation.spring();\r\n          setAnime(prev => ({\r\n            scale: prev.scale ===1 ? 1.3 : 1,\r\n            offset: prev.offset === 0 ? 100 : 0\r\n          }))\r\n        }}\r\n      >\r\n        <Image\r\n          style={styles.img}\r\n          source={img}\r\n          onMouseEnter={() => {}}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <Text styles={{fontSize: 35, fontStyle: \"bold\"}}>\r\n        {text}\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    borderColor: \"tomato\",\r\n    padding: 10,\r\n    height: 0.2 * height,\r\n    margin: 10\r\n  },\r\n\r\n  containerImg: {\r\n    width: 0.4 * width,\r\n    height: 0.18 * height,\r\n    borderRadius: 10,\r\n    borderColor: \"lightblue\",\r\n    borderWidth: 1\r\n  },\r\n\r\n  img: {\r\n    flex: 1,\r\n    width: null,\r\n    height: null,\r\n    resizeMode: 'contain',\r\n    margin: 5\r\n  }\r\n});\r\n\r\nexport {Card as default};\r\n"]},"metadata":{},"sourceType":"module"}